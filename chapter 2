---------------------2.1.1节练习------------------------
练习2.1 
int:整型
long:长整型
long long:更长整型
short:短整型

练习2.2
利率:unsigned double
本金:unsigned double
付款:double

---------------------2.1.2节练习------------------------
练习2.3
32
4294967264
32
-32
0
0

练习2.4
#include<iostream>
#include "Sales_item.h"

int main(){
   unsigned u = 10, u2 = 42;
   std::cout << u2 - u << std::endl;
   std::cout << u - u2 << std::endl;

   int i = 10, i2 = 42;
   std::cout << i2 - i << std::endl;
   std::cout << i - i2 << std::endl;
   std::cout << i - u << std::endl;
   std::cout << u - i << std::endl;
}

---------------------2.1.3节练习------------------------
练习2.5
a) 'a':字符字面值  L'a':宽字符字面值  "a":字符串字面值  L"a":宽字符串字面值
b)  10:十进制整型   10u:十进制无符号整型  10L:十进制长整型 10uL:十进制无符号长整型  012:八进制整型  0xc:十六进制整型
c)  3.14:float  3.14f:float  3.14L:long double
d)  10:int  10u:unsigned int  10.:float  10e-2:float

练习2.6
有区别，第一行是二进制，第二行是八进制

练习2.7
a)Who goes with Fergus?(换行)，string 类型
b)long double
c)float
d)long double

练习2.8
#include<iostream>
#include "Sales_item.h"

int main(){
    std::cout << "2M\n";
    return 0;
}

#include<iostream>
#include "Sales_item.h"

int main(){
    std::cout << "2\tM\n";
    return 0;
}

---------------------2.2.1节练习------------------------
练习2.9
a)
#include<iostream>
#include "Sales_item.h"

int main(){
    int input_value;
    std::cin >> input_value;
    return 0;
}

b)
#include<iostream>
#include "Sales_item.h"

int main(){
    double i = {3.14};
    return 0;
}

c)
#include<iostream>
#include "Sales_item.h"

int main(){
    double salary;
    double wage = salary = 9999.999;
    return 0;
}

d)
#include<iostream>
#include "Sales_item.h"

int main(){
    double i = 3.14;
    return 0;
}

练习2.10
global_str：空字符串 global_int：0 local_int：未定义的 local_str：空字符串

---------------------2.2.2节练习------------------------
练习2.11
a)定义
b)定义
c)声明

---------------------2.2.3节练习------------------------
练习2.12
a)double是类型名，不可用作变量名
b)合法
c)含关键字catch
d)含操作符or
e)合法

---------------------2.2.4节练习------------------------
练习2.13
j的值应为100

练习2.14
输出：100 45

---------------------2.3.1节练习------------------------
练习2.15
a)合法
b)非法，不能直接引用值
c)合法
d)非法，引用必须初始化

练习2.16
a): 合法。给 d 赋值为 3.14159。
b): 合法。int型转为double型。
c): 合法。会发生小数截取。
d): 合法。会发生小数截取。

练习2.17
输出：
10 10

---------------------2.3.2节练习------------------------
练习2.18
#include<iostream>
#include "Sales_item.h"

int main(){
    int i = 100, j = 200,  *p;
    p = &i;
    std::cout << *p  << std::endl;
    p = &j;
    std::cout << *p  << std::endl;
    *p = 300;
    std::cout << j  << std::endl;
    return 0;
}

练习2.19
引用是别名，指针是地址

练习2.20
声明一个整型变量i并赋值为42
声明一个整型指针p1并指向i
利用p1将i的值修改为42*42

练习2.21
a)非法，类型错误
b)非法，未取地址
c)合法

练习2.22
判断是否为空指针
判断地址所指向的值是否为0

练习2.23
使用try catch实现

练习2.24
void型指针可以指向int型变量而double型指针不可以指向int型变量

---------------------2.3.3节练习------------------------
练习2.25
a)
ip:指向int型的指针
i:int型变量
r:对i的引用
b)
i:int型变量
ip:空指针
c)
ip:指向int型的指针
ip2:整型变量

---------------------2.4节练习------------------------
练习2.26
a)非法，const需要初始化
b)合法
c)合法
d)非法，const定义后不能修改

---------------------2.4.2节练习------------------------
练习2.27
a)非法，不能直接引用数字
b)合法
c)合法
d)合法
e)合法
f)非法，引用应初始化
g)合法

练习2.28
a)非法，常量指针必须初始化
b)非法，常量指针必须初始化
c)非法，常量必须初始化
d)非法，常量指针必须初始化
e)合法

练习2.29
a)合法
b)合法
c)非法，不能指向常量
d)非法
e)非法

---------------------2.4.3节练习------------------------
练习2.30
V2是顶层const
p2是底层const
p3是顶层const
r2是底层const

练习2.31
r1 = v2; // 合法, 顶层const在拷贝时不受影响
p1 = p2; // 不合法, p2 是底层const，如果要拷贝必须要求 p1 也是底层const
p2 = p1; // 合法, int* 可以转换成const int*
p1 = p3; // 不合法, p3 是一个底层const，p1 不是
p2 = p3; // 合法, p2 和 p3 都是底层const，拷贝时忽略掉顶层const

---------------------2.4.4节练习------------------------
练习2.32
非法，修改为：
int null = 0, *p = &null;

---------------------2.5.2节练习------------------------
练习2.33
a=42
b=42
c=42; // c 也是一个int
d=42; // d 是一个 int *,所以语句非法
e=42; // e 是一个 const int *, 所以语句非法
g=42; // g 是一个 const int 的引用，引用都是底层const，所以不能被赋值

练习2.34
略

练习2.35
j:int

---------------------2.5.3节练习------------------------
练习2.36
c:int型值为4
d:int型值为4

---------------------2.6.1节练习------------------------
练习2.39
error: expected ';' after struct definition

练习2.40
struct Sales_data {
    std::string BookName;
    std::string BookId;
    double price;
    int number;
};
---------------------2.6.2节练习------------------------
练习2.41
#include <iostream>
#include <string>

struct Sale_data
{
    std::string bookNo;
    unsigned units_sold = 0;
    double revenue = 0.0;
};

int main()
{
    Sale_data book;
    double price;
    std::cin >> book.bookNo >> book.units_sold >> price;
    book.revenue = book.units_sold * price;
    std::cout << book.bookNo << " " << book.units_sold << " " << book.revenue << " " << price;
    return 0;
}

#include <iostream>
#include <string>

struct Sale_data
{
    std::string bookNo;
    unsigned units_sold = 0;
    double revenue = 0.0;
};

int main()
{
    Sale_data book1, book2;
    double price1, price2;
    std::cin >> book1.bookNo >> book1.units_sold >> price1;
    std::cin >> book2.bookNo >> book2.units_sold >> price2;
    book1.revenue = book1.units_sold * price1;
    book2.revenue = book2.units_sold * price2;
    if (book1.bookNo == book2.bookNo)
    {
        unsigned totalCnt = book1.units_sold + book2.units_sold;
        double totalRevenue = book1.revenue + book2.revenue;
        std::cout << book1.bookNo << " " << totalCnt << " " << totalRevenue << " ";
        if (totalCnt != 0)
            std::cout << totalRevenue / totalCnt << std::endl;
        else
            std::cout << "(no sales)" << std::endl;
        return 0;
    }
    else
    {
        std::cerr << "Data must refer to same ISBN" << std::endl;
        return -1;  
    }
}

#include <iostream>
#include <string>

struct Sale_data
{
    std::string bookNo;
    unsigned units_sold = 0;
    double revenue = 0.0;
};

int main()
{
    Sale_data total;
    double totalPrice;
    if (std::cin >> total.bookNo >> total.units_sold >> totalPrice)
    {
        total.revenue = total.units_sold * totalPrice;
        Sale_data trans;
        double transPrice;
        while (std::cin >> trans.bookNo >> trans.units_sold >> transPrice)
        {
            trans.revenue = trans.units_sold * transPrice;

            if (total.bookNo == trans.bookNo)
            {
                total.units_sold += trans.units_sold;
                total.revenue += trans.revenue;
            }
            else
            {
                std::cout << total.bookNo << " " << total.units_sold << " " << total.revenue << " ";
                if (total.units_sold != 0)
                    std::cout << total.revenue / total.units_sold << std::endl;
                else
                    std::cout << "(no sales)" << std::endl;
                total.bookNo = trans.bookNo;
                total.units_sold = trans.units_sold;
                total.revenue = trans.revenue;
            }
        }
        std::cout << total.bookNo << " " << total.units_sold << " " << total.revenue << " ";
        if (total.units_sold != 0)
            std::cout << total.revenue / total.units_sold << std::endl;
        else
            std::cout << "(no sales)" << std::endl;
        return 0;
    }
    else
    {
        std::cerr << "No data?!" << std::endl;
        return -1; 
    }
}

---------------------2.6.3节练习------------------------
练习2.42
略
